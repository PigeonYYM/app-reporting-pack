#!/bin/bash
# Copyright 2023 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

check_ads_config() {
  if [[ -n $google_ads_config ]]; then
    use_google_ads_config='y'
    ads_config=$google_ads_config
  elif [[ -f "./google-ads.yaml" ]]; then
    echo -n "Would you like to use google-ads.yaml (Y/n)?: "
    read -r use_google_ads_config
    use_google_ads_config=$(convert_answer $use_google_ads_config 'Y')
    ads_config=google-ads.yaml
  elif [[ -f "$HOME/google-ads.yaml" ]]; then
    echo -n "Would you like to use ~/google-ads.yaml (Y/n)?: "
    read -r use_google_ads_config
    use_google_ads_config=$(convert_answer $use_google_ads_config 'Y')
    ads_config=$HOME/google-ads.yaml
  fi

  if [[ $use_google_ads_config != 'y' ]]; then
    # entering credentials one by one
    read -p "developer_token (from your Google Ads account): " -r DEVELOPER_TOKEN
    read -p "OAuth client id: " -r OAUTH_CLIENT_ID
    read -p "OAuth client secret: " -r OAUTH_CLIENT_SECRET
    echo "See details on how to generate a refresh token here: https://github.com/google/ads-api-report-fetcher/blob/main/docs/how-to-authenticate-ads-api.md"
    read -p "refresh_token: " -r REFRESH_TOKEN
    read -p "login_customer_id (MCC): " -r MCC_ID
    ads_config=google-ads.yaml
    if [[ -f "./google-ads.yaml" ]]; then
      read -p "File google-ads.yaml already exists, do you want to overwrite it (Y/n)? " -r overwrite
      overwrite=$(convert_answer $overwrite 'Y')
      if [[ $overwrite = 'n' ]]; then
        read -p "Enter a file name for your google-ads.yaml: " -r ads_config
      fi 
    fi
    echo "# google-ads.yaml was auto-generated by installer (run-local.sh) ${date}
developer_token: ${DEVELOPER_TOKEN}
client_id: ${OAUTH_CLIENT_ID}
client_secret: ${OAUTH_CLIENT_SECRET}
refresh_token: ${REFRESH_TOKEN}
login_customer_id: ${MCC_ID}
use_proto_plus: True
    " > $ads_config
  fi
}

convert_answer() {
  echo "$1" | tr '[:upper:]' '[:lower:]' | cut -c1
}

prompt_running() {
  if [[ $generate_config_only = "y" ]]; then
    exit
  fi
  echo -n -e "${COLOR}Start running $solution_name? Y/n: ${NC}"
  read -r answer
  answer=$(convert_answer $answer 'Y')

  if [[ $answer = "y" ]]; then
    echo "Running..."
  else
    echo "Exiting the script..."
    exit
  fi
}

parse_yaml () {
   local yaml_file="$1"
   local prefix="$2"
   while read line; do
      local variable=`echo "$line" | sed -e 's/: /=/'`
      if [ "${variable::1}" != "#" ] && [ `echo "$variable" | wc -c` -gt 2 ]; then
         eval "export ${prefix}${variable}"
      fi
   done < <(cat $yaml_file)
}